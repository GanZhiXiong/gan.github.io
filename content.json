{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment _config.yml1theme: icarus bash1find / -name '*abc*' 1234567package mainimport &quot;fmt&quot;func main() { fmt.Println(&quot;hello world&quot;)}","link":"/p/4a17b156/"},{"title":"打新冠疫苗经验分享","text":"封面为我打疫苗受的伤😂，不希望大家也像我这样，因此我把经验分享给大家👍！ 5月初打第一针的时候人不多，而且包接送。 今天打第二针是需要预约的（需要通过自己所在的社区进行团队预约，目前已不支持个人预约了。），而且得抢，还不一定能抢到。我约的10点的车，在西乡社区居委会等车都等到快11才来车，原因是打疫苗的地方人太多了，即使把我们送过去，都没有地方可以站人了。到了就在那里排队等待打疫苗，等待区的地方人都站满了，想象一下大热天的站在烈日下的感觉吧。 从10点在社区居委会等车，一直到2点我才打完疫苗。整整4个小时，感觉浪费了大把时间，因此我有必要分享下我的经验： 能打的还是尽早去打吧，毕竟现在免费，会面估计早去打的话估计人更多。 我所在的社区已经不支持个人预约了（深圳），要到通过社区团队预约。 一定要约早一点，最好9点半之前，不然真的人太多了。我还以为周一大家都不会请假，没想到人特别多。 一定要带伞，既可以防晒又可以防雨。 带只笔吧。在社区需要填《知情同意书》，排队打疫苗时要填《声明书》，自己有笔可以边排队边填写。 水也带瓶吧，虽然打第二针的时候是有发水的，还是有备无患吧。 身份证一定要带。 手机充满电，手机充满电，手机充满电。","link":"/p/bb533952/"},{"title":"SQL Server字符串拼接的结果为NULL的问题","text":"问题某个存储过程的参数有一个输出参数：@msg nvarchar(1024) output ，拼接的字符串会赋值给@msg，然后C#代码获取@msg后显示到界面上。 通过测试后发现字符串和变量拼接竟然变成了空字符串： 1234567declare @msg nvarchar(512)declare @name varchar(50)set @name='gan'declare @time datetime-- CONVERT(varchar,@time,20)是将时间格式化输出set @msg= 'test: ' + CONVERT(varchar,@time,20) + CAST(@name as varchar)select '1' + @msg + '2' 解决本以为使用convert和cast将类型转换为varchar字符类型就没有问题了。 检查发现，是由于@time为NULL导致的(变量声明之后的默认值为NULL)。 解决办法就是使用 isnull 将为NULL的变量转换为空字符串： 1234567declare @msg nvarchar(512)declare @name varchar(50)set @name='gan'declare @time datetimeselect @timeset @msg= 'test: ' + CONVERT(varchar,ISNULL(@time, ''),20) + CAST(ISNULL(@name, '') as varchar)select '** ' + @msg + ' **'","link":"/p/93f760c5/"},{"title":"如何正确的将字符串数组传给in","text":"问题C#使用join将数组的元素用逗号分隔为字符串传递给SQL Server存储过程要么报错，要么查询的表格结果为0条数据。 C#中的代码如下： 1234DataTable dataTable = DbHelperSQL.RunProcedure(&quot;proc_Data_GetUploadInfo&quot;, new IDataParameter[] { new SqlParameter(&quot;@BillCodes&quot;, $&quot;'{string.Join(&quot;','&quot;, result.Select(x =&gt; x.prepare_num.ToString()).ToArray())}'&quot;), }, &quot;get&quot;).Tables[0]; 解决经过各种尝试，我使用 exec sp_executesql @sql 这种方式解决的: 1234declare @sql nvarchar(max)set @sql='select * from (select BillCode,BillType,NetWeight,Tare,TareWeightTime,GrossWeight,GrossWeightTime from OrderInfo union select BillCode,BillType,NetWeight,Tare,TareWeightTime,GrossWeight,GrossWeightTime from EndInfo) as u where u.BillCode in('+@BillCodes+')'exec sp_executesql @sql 如果你有更好的方法，请在评论区留言。","link":"/p/5a8bb790/"},{"title":"使用hexo-abbrlink插件生成永久短链接","text":"为了解决Hexo默认生成的链接，在修改文件名后，链接会跟这变，如果旧链接在其他地方有被引用，访问旧链接的响应为404错误。且链接为日期 + 目录，层级太多，不利于SEO。 因此急需一种生成永久短链接的方案！ 生成链接的默认配置1permalink: ':year/:month/:day/:title/' :title 指的是文章在_posts目录下的相对路径，不包含文件名后缀。 该配置会生成像下面这样的链接： 文章在_posts目录下 1http://localhost:4000/2021/05/24/hello-world/ 文章在_posts/git目录下 如果文件名为中文，复制的URL是URL编码后的URL，这样不仅显示得很长，不易阅读，而且还不不易于SEO（通常搜索引擎只会爬取URL前三层）。 1http://localhost:4000/2021/05/24/git/Git%20LFS%E4%BD%BF%E7%94%A8%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%981/ 缺陷 修改文件名后，链接会跟这变。如果旧链接在其他地方有被引用，访问旧链接的响应为404错误。 日期 + 目录，层级太多，不利于SEO。 hexo-abbrlink安装直接看hexo-abbrlink的 README。 配置你可以使用README中的配置。 下面是我的配置： 12345678910111213141516171819# permalink: ':year/:month/:day/:title/'# 生成的文件在public目录下面# permalink: :abbrlink/# 生成的文件在p目录下面permalink: p/:abbrlink/# abbrlink configabbrlink: alg: crc32 #support crc16(default) and crc32 rep: hex #support dec(default) and hex drafts: false #(true)Process draft,(false)Do not process draft. false(default) # Generate categories from directory-tree# depth: the max_depth of directory-tree you want to generate, should &gt; 0auto_category: enable: true #true(default) depth: #3(default) over_write: false auto_title: true #enable auto title, it can auto fill the title by pathauto_date: false #enable auto date, it can auto fill the date by time todayforce: false #enable force mode,in this mode, the plugin will ignore the cache, and calc the abbrlink for every post even it already had abbrlink. 配置完成后先执行 hexo clean ，然后执行 hexo g 重新生成。 它会在每篇MarkDown的front matter中添加 abbrlink，例如： 123456789101112---title: 使用hexo-abbrlink插件生成永久短链接typora-copy-images-to: uploadcategories: - Blog - Hexoabbrlink: fcaf5192date: 2021-06-01 12:52:35tags: - Blog - Hexo--- 我的配置生成的链接如下： 12http://localhost:4000/p/bb533952/http://localhost:4000/p/5a8bb790/ 问题此插件我也发现了一个问题：如果没有title，生成的abbrlink为’0’ #56。","link":"/p/fcaf5192/"},{"title":"如何修改gitalk的CSS样式","text":"icarus主题是自带评论插件的，评论插件由ppoffice/hexo-component-inferno提供。具体启用评论插件的操作请看 Icarus用户指南 - 用户评论插件。 我启用了Gitalk作为评论插件，Gitalk 是一个基于 GitHub Issue 和 Preact 开发的评论插件。但是其默认是浅色模式，而我的博客是深色模式，这样配色就很不协调了。因此我需要将Gitalk的浅色模式改为和我博客一致的深色模式。 步骤修改CSS文件修改CSS文件有两种方法。 方法一：直接在gitalk.js中修改 打开你博客目录下的 node_modules/hexo-component-inferno/lib/view/comment/gitalk.js 文件。 找到 cssUrl: helper.cdn('gitalk', '1.7.2', 'dist/gitalk.css'), 将其注释。在其下行添加 cssUrl: '/css/gitalk.css', 。 gitalk.js12345678910111213141516171819202122232425Gitalk.Cacheable = cacheComponent(Gitalk, 'comment.gitalk', function (props) { var helper = props.helper, comment = props.comment; // FIXME: config name change var id = crypto.createHash('md5').update(props.page.path).digest('hex'); return { id: id, repo: comment.repo, owner: comment.owner, admin: comment.admin, clientId: comment.client_id, clientSecret: comment.client_secret, createIssueManually: comment.create_issue_manually, distractionFreeMode: comment.distraction_free_mode, pagerDirection: comment.pager_direction, perPage: comment.per_page, proxy: comment.proxy, flipMoveOptions: comment.flip_move_options, enableHotKey: comment.enable_hotkey, language: comment.language, // cssUrl: helper.cdn('gitalk', '1.7.2', 'dist/gitalk.css'), cssUrl: '/css/gitalk.css', jsUrl: helper.cdn('gitalk', '1.7.2', 'dist/gitalk.min.js') };}); 方法二：在_config.icarus.yml中配置 打开 _config.icarus.yml。 在 comment 下添加 cssUrl ，值为 '/css/gitalk.css'。 12comment: cssUrl: '/css/gitalk.css' 打开你博客目录下的 node_modules/hexo-component-inferno/lib/view/comment/gitalk.js 文件。 找到 cssUrl: helper.cdn('gitalk', '1.7.2', 'dist/gitalk.css'), 将其注释。在其下行添加 cssUrl: comment.cssUrl, 创建gitalk.css 在此你博客目录下创建此文件 themes/icarus/source/css/gitalk.css 。 通过浏览器的DevTools工具调整gitalk的CSS后，拷贝gitalk.css的内容到 themes/icarus/source/css/gitalk.css中。 重新生成执行 hexo g 重新生成静态文件。打开生成的静态文件，可以看到css文件路径变化了。","link":"/p/89673c2d/"},{"title":"","text":"1. this exceeds GitHub’s file size limit of 100.00MB对于大型文件的版本控制，我按照https://git-lfs.github.com/ 操作后，还是提示下图error： 接着我运行命令git lfs track ，该命令的作用是显示 Git LFS 当前正在跟踪的所有模式的列表（以及它们在其中定义的.gitattributes 文件）。 果然这个路径是不对的，而且多出了 [[:space:]]。 解决 可以直接删除 .gitattributes文件或使用 git lfs untrack path不跟踪指定大文件。 重新执行 git lfs track EzvizLIB/libEZOpenSDK.a跟踪该文件。 再次查看跟踪文件列表。 再次push，问题解决。 2. clone下拉又LFS跟踪的文件大小只有134字节 通过搜索得知： 在安装 Git LFS 之前，克隆了使用 Git LFS 的仓库，则被 Git LFS 管理的文件会被显示为文本指针，而非具体的文件。 查看这些文件指针，会发现类似如下内容 version https://git-lfs.github.com/spec/v1 oid sha256:4b99dbe6fe6f646b2026de93481045bbf34f995559db15fce34d192f1f320ef4 size 156154 解决办法就是，手动执行获取 Git LFS 对象的命令： git lfs fetch git lfs checkout # 或 git lfs pull 解决 在一篇文章 https://zzz.buzz/zh/2016/04/19/the-guide-to-git-lfs/找到可疑方法，如下图所示： 于是执行如下命令： 1git lfs pull 执行后提示如下： 根据上一步提示，很明显没有安装lfs。从 https://git-lfs.github.com/或binary packages 下载二进制包，下载解压后，执行 .install.sh安装lfs。 再次执行 sudo git lfs pull (不加sudo，会提示无权限)，提示如下图所示： fetch失败，我想应该是网络问题，于是给终端添加代理后（注意添加后sudo命令默认是不会走代理的，因此你还需要让sudo命令走代理，方法自行搜索），再次执行 sudo git lfs pull 还是提示上图的错误。执行不带sudo的 git lfs pull 却能下载成功，但是提示 permission denied : 于是尝试重新clone却可以了。 3. 收到 At 80% of Git LFS data quota for GanZhiXiong这样的邮箱邮箱内容为： We wanted to let you know that you’ve used 80% of your data plan for Git LFS on your personal account GanZhiXiong. No immediate action is necessary, but you might want to consider purchasing additional data packs to cover your bandwidth and storage usage: https://github.com/account/billing/data/upgrade Current usage as of 21 May 2021 09:54AM UTC: Bandwidth: 0.89 GB / 1 GB (89%) Storage: 0.22 GB / 1 GB (22%) 翻译过来为： 谨在此告知您，您的个人帐户GanZhiXiong已将80％的数据计划用于Git LFS。 无需立即采取措施，但是您可能要考虑购买其他数据包来覆盖您的带宽和存储使用情况： https://github.com/account/billing/data/upgrade 截至2021年5月21日UTC的当前使用情况： 带宽：0.89 GB / 1 GB（89％） 储存空间：0.22 GB / 1 GB（22％） 你可以在 https://github.com/settings/billing 此页查看到LFS的可用存储空间和带宽： 通过 https://docs.github.com/cn/github/managing-large-files/versioning-large-files/about-storage-and-bandwidth-usage 此页可以得知GitHub为每个使用 Git Large File Storage 的帐户都会获得 1 GB 的免费存储空间和一个月的免费带宽 1 GB。 如果带宽和存储配额不够，您可以选择为 Git LFS 购买额外配额。 你可以 https://github.com/account/billing/data/upgrade 此页购买Git LFS额外配额。","link":"/p/448598ca/"},{"title":"macOS、Linux安装Zsh和Oh My Zsh教程","text":"前言Linux系统提供多种不同的Shell以供选择。常用的有 Bourne Shell（简称sh）、C-Shell（简称csh）、Korn Shell（简称ksh）和 Bourne Again Shell （简称 bash ）等。对于经常使用终端的用户，我推荐大家都安装Zsh，因为体验更好。 Zsh什么是ZshZsh官网是这么介绍的 Zsh is a shell designed for interactive use, although it is also a powerful scripting language. More information can be found on the “Zsh Web Pages” sites.Zsh是一种为交互使用而设计的shell，尽管它也是一种强大的脚本语言。更多信息可在“Zsh网页”网站上找到。 Zsh Web Pages是这么介绍的 Zsh is a shell designed for interactive use, although it is also a powerful scripting language. Many of the useful features of bash, ksh, and tcsh were incorporated into Zsh; many original features were added. The introductory document details some of the unique features of Zsh. It assumes basic knowledge of the standard UNIX shells; the intent is to show a reader already familiar with one of the other major shells what makes Zsh more useful or more powerful. This document is not at all comprehensive; read the manual entry for a description of the shell that is complete, concise and up-to-date, although somewhat overwhelming and devoid of examples. Alternatively, the user guide offers wordy explanations of many of the shell’s features. If you want to read something that has been polished by a professional editor you can buy the book.Zsh是一种为交互使用而设计的shell，尽管它也是一种功能强大的脚本语言。bash、ksh和tcsh的许多有用特性都被合并到Zsh中;添加了许多原始的特性。介绍性文档详细介绍了Zsh的一些独特特性。它假定您具有标准UNIX shell的基本知识;其目的是向已经熟悉其他主要shell之一的读者展示使Zsh更有用或更强大的原因。这份文件一点也不全面;阅读手册条目，了解完整、简洁和最新的shell描述 Zsh也称为Z shell，是Bourne Shell（sh）的扩展版本，具有大量新功能，并支持插件和主题。 由于它基于与Bash相同的shell，因此Zsh具有许多相同的功能，并且切换是轻而易举的。 Zsh主要功能 自动cd：只需输入目录的名称即可 递归路径扩展：例如“/ u / lo / b”扩展为“/ usr / local / bin” 拼写更正和近似完成：如果您输入目录名称时出现轻微错误，Zsh将为您解决此问题 插件和主题支持： Zsh包含许多不同的插件框架 Linux安装Zsh 查看下剩余空间12345678[admin@Main ~]$ df -hFilesystem Size Used Avail Use% Mounted on/dev/vda1 40G 29G 8.5G 78% /devtmpfs 1.9G 0 1.9G 0% /devtmpfs 1.9G 0 1.9G 0% /dev/shmtmpfs 1.9G 185M 1.7G 10% /runtmpfs 1.9G 0 1.9G 0% /sys/fs/cgrouptmpfs 380M 0 380M 0% /run/user/1000 查看Linux信息123456[admin@Main ~]$ lsb_release -aLSB Version: :core-4.1-amd64:core-4.1-noarchDistributor ID: CentOSDescription: CentOS Linux release 7.0.1406 (Core) Release: 7.0.1406Codename: Core 查看当前使用的Shell12[admin@Main ~]$ echo $SHELL/bin/bash 查看安装的Shell123456789[admin@Main ~]$ cat /etc/shells /bin/sh/bin/bash/sbin/nologin/usr/bin/sh/usr/bin/bash/usr/sbin/nologin/bin/tcsh/bin/csh 可以看到CentOS7默认没有安装Zsh 安装Zsh12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152[admin@Main ~]$ sudo yum install zsh[sudo] password for admin: Loaded plugins: langpacksRepodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fastbase | 3.6 kB 00:00:00 epel | 4.7 kB 00:00:00 extras | 2.9 kB 00:00:00 https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.4/x86_64/repodata/repomd.xml: [Errno 12] Timeout on https://repo.mongodb.org/yum/redhat/7/mongodb-org/3.4/x86_64/repodata/repomd.xml: (28, 'Operation timed out after 3024 milliseconds with 0 out of 0 bytes received')Trying other mirror.mongodb-org-3.4 | 2.5 kB 00:00:00 updates | 2.9 kB 00:00:00 (1/8): epel/x86_64/group_gz | 95 kB 00:00:00 (2/8): epel/x86_64/updateinfo | 1.0 MB 00:00:00 (3/8): base/7/x86_64/group_gz | 153 kB 00:00:00 (4/8): base/7/x86_64/primary_db | 6.1 MB 00:00:00 (5/8): epel/x86_64/primary_db | 6.9 MB 00:00:00 (6/8): extras/7/x86_64/primary_db | 206 kB 00:00:00 (7/8): updates/7/x86_64/primary_db | 3.8 MB 00:00:00 (8/8): mongodb-org-3.4/7/primary_db | 99 kB 00:00:02 Resolving Dependencies--&gt; Running transaction check---&gt; Package zsh.x86_64 0:5.0.2-34.el7_8.2 will be installed--&gt; Finished Dependency ResolutionDependencies Resolved========================================================================================================================================================= Package Arch Version Repository Size=========================================================================================================================================================Installing: zsh x86_64 5.0.2-34.el7_8.2 updates 2.4 MTransaction Summary=========================================================================================================================================================Install 1 PackageTotal download size: 2.4 MInstalled size: 5.6 MIs this ok [y/d/N]: yDownloading packages:zsh-5.0.2-34.el7_8.2.x86_64.rpm | 2.4 MB 00:00:00 Running transaction checkRunning transaction testTransaction test succeededRunning transaction Installing : zsh-5.0.2-34.el7_8.2.x86_64 1/1 Verifying : zsh-5.0.2-34.el7_8.2.x86_64 1/1 Installed: zsh.x86_64 0:5.0.2-34.el7_8.2 Complete! 查看Zsh是否已安装12345678910[admin@Main ~]$ cat /etc/shells/bin/sh/bin/bash/sbin/nologin/usr/bin/sh/usr/bin/bash/usr/sbin/nologin/bin/tcsh/bin/csh/bin/zsh 切换到Zsh1234[admin@Main ~]$ chsh -s /bin/zshChanging shell for admin.Password: Shell changed. reboot12345678[admin@Main ~]$ reboot==== AUTHENTICATING FOR org.freedesktop.login1.reboot ===Authentication is required for rebooting the system.Authenticating as: rootPassword: ==== AUTHENTICATION COMPLETE ===Connection xxx closed by remote host.Connection to xxx closed. 重启在进入Linux，提示如下信息：1234567891011121314151617This is the Z Shell configuration function for new users,zsh-newuser-install.You are seeing this message because you have no zsh startup files(the files .zshenv, .zprofile, .zshrc, .zlogin in the directory~). This function can help you with a few settings that shouldmake your use of the shell easier.You can:(q) Quit and do nothing. The function will be run again next time.(0) Exit, creating the file ~/.zshrc containing just a comment. That will prevent this function being run again.(1) Continue to the main menu.--- Type one of the keys in parentheses --- 按 1 进入主菜单然后提示如下信息： 1234567891011121314151617181920Please pick one of the following options:(1) Configure settings for history, i.e. command lines remembered and saved by the shell. (Recommended.)(2) Configure the new completion system. (Recommended.)(3) Configure how keys behave when editing command lines. (Recommended.)(4) Pick some of the more common shell options. These are simple &quot;on&quot; or &quot;off&quot; switches controlling the shell's features. (0) Exit, creating a blank ~/.zshrc file.(a) Abort all settings and start from scratch. Note this will overwrite any settings from zsh-newuser-install already in the startup file. It will not alter any of your other settings, however.(q) Quit and do nothing else. The function will be run again next time.--- Type one of the keys in parentheses --- 直接输入一个 0 会在 ～ 目录下生成一个空的 .zshrc 配置文件。然后提示如下信息： 1234567891011The function will not be run in future, but you can runit yourself as follows: autoload -Uz zsh-newuser-install zsh-newuser-install -fThe code added to ~/.zshrc is marked by the lines# Lines configured by zsh-newuser-install# End of lines configured by zsh-newuser-installYou should not edit anything between these lines if you intend torun zsh-newuser-install again. You may, however, edit any other partof the file. 查看是否切换为Zsh 12 [admin@Main]~% echo $SHELL/bin/zsh Oh My Zsh什么是Oh My Zsh首先看下Oh My Zsh 官网的介绍 Oh My Zsh is an open source, community-driven framework for managing your zsh configuration. Sounds boring. Let’s try again. Oh My Zsh will not make you a 10x developer…but you may feel like one. Once installed, your terminal shell will become the talk of the town or your money back! With each keystroke in your command prompt, you’ll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in cafés and ask you, “that is amazing! are you some sort of genius?” Finally, you’ll begin to get the sort of attention that you have always felt you deservedOh My Zsh是一个用于管理Zsh配置的开源、社区驱动的框架。听起来无聊。让我们再试一次。哦，我的Zsh不会让你成为一个10倍的开发人员…但你可能觉得自己就是。一旦安装，您的终端外壳将成为讨论城镇或您的钱回来!在命令提示符中的每一次按键，您将利用数百个强大的插件和美丽的主题。在咖啡馆里，陌生人会走到你面前问你:“太棒了!”你是什么天才吗?”最后，你会开始得到你一直认为自己应该得到的关注 简单来说就是配置很麻烦，Oh My Zsh这个框架开源简化Zsh的配置，并且提供了Plugins、Community、Themes 下图为官网介绍的Oh My Zsh三大功能 安装Oh My Zsh官方提供了两种安装方式 通过curl1sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot; 通过weget1sh -c &quot;$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)&quot; 我这里使用curl安装123456789101112131415161718192021222324252627[admin@Main]~% sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;Cloning Oh My Zsh...Cloning into '/home/admin/.oh-my-zsh'...remote: Enumerating objects: 1156, done.remote: Counting objects: 100% (1156/1156), done.remote: Compressing objects: 100% (1124/1124), done.remote: Total 1156 (delta 21), reused 1067 (delta 16), pack-reused 0Receiving objects: 100% (1156/1156), 775.41 KiB | 16.00 KiB/s, done.Resolving deltas: 100% (21/21), done.Looking for an existing zsh config...Found ~/.zshrc. Backing up to /home/admin/.zshrc.pre-oh-my-zshUsing the Oh My Zsh template file and adding it to ~/.zshrc. __ __ ____ / /_ ____ ___ __ __ ____ _____/ /_ / __ \\/ __ \\ / __ `__ \\/ / / / /_ / / ___/ __ \\/ /_/ / / / / / / / / / / /_/ / / /_(__ ) / / /\\____/_/ /_/ /_/ /_/ /_/\\__, / /___/____/_/ /_/ /____/ ....is now installed!Before you scream Oh My Zsh! please look over the ~/.zshrc file to select plugins, themes, and options.• Follow us on Twitter: https://twitter.com/ohmyzsh• Join our Discord server: https://discord.gg/ohmyzsh• Get stickers, shirts, coffee mugs and other swag: https://shop.planetargon.com/collections/oh-my-zsh 安装前和安装后对比这里以ll命令来对比很明显能够看出变化了 安装zsh-syntax-highlighting语法高亮插件 Clone this repository in oh-my-zsh’s plugins directory1git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting Activate the plugin in ~/.zshrc:1vim ~/.zshrc plugins添加zsh-syntax-highlighting1234plugins=( git, zsh-syntax-highlighting) 执行source ~/.zshrc 相较于纯白字的命令，添加这个插件后，现在我们的命令语法高亮了 安装zsh-autosuggestions历史记录插件 Clone this repository in oh-my-zsh’s plugins directory1git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions Activate the plugin in ~/.zshrc:1vim ~/.zshrc plugins添加zsh-autosuggestions12345plugins=( git, zsh-syntax-highlighting, zsh-autosuggestions) 执行source ~/.zshrc 快看有历史记录提示了，按下右方向键即可自动选中 安装incr自动提示插件incr官网incr是一款自动提示插件，功能非常强大，官网演示demo，感受一下 创建incr目录mkdir $ZSH_CUSTOM/plugins/incr 下载incrwget http://mimosa-pudica.net/src/incr-0.2.zsh -O $ZSH_CUSTOM/plugins/incr/incr.plugin.zsh Activate the plugin in ~/.zshrc:1vim ~/.zshrc plugins添加incr123456plugins=( git, zsh-syntax-highlighting, zsh-autosuggestions, incr) 执行source ~/.zshrc 修改主题默认主题是robbyrussell我习惯用的主题是ys，接下来我将默认主题修改ys vim ~/.zshrc 找到ZSH_THEME=&quot;robbyrussell&quot;将robbyrussell修改为ys 执行source ~/.zshrc 主题效果图如下： 错误insecure directories, run compaudit for list. 当ssh连接到Linux时 当执行source ~/.zshrc时 会报如下错误提示 123456789101112131415161718192021[oh-my-zsh] Insecure completion-dependent directories detected:drwxrwxr-x 2 admin admin 4096 Aug 13 13:11 /home/admin/.oh-my-zsh/custom/plugins/incrdrwxrwxr-x 7 admin admin 4096 Aug 13 12:56 /home/admin/.oh-my-zsh/custom/plugins/zsh-autosuggestionsdrwxrwxr-x 7 admin admin 4096 Aug 13 12:37 /home/admin/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting[oh-my-zsh] For safety, we will not load completions from these directories until[oh-my-zsh] you fix their permissions and ownership and restart zsh.[oh-my-zsh] See the above list for directories with group or other writability.[oh-my-zsh] To fix your permissions you can do so by disabling[oh-my-zsh] the write permission of &quot;group&quot; and &quot;others&quot; and making sure that the[oh-my-zsh] owner of these directories is either root or your current user.[oh-my-zsh] The following command may help:[oh-my-zsh] compaudit | xargs chmod g-w,o-w[oh-my-zsh] If the above didn't help or you want to skip the verification of[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to[oh-my-zsh] &quot;true&quot; before oh-my-zsh is sourced in your zshrc file.zsh compinit: insecure directories, run compaudit for list.Ignore insecure directories and continue [y] or abort compinit [n]? y% 有两种解决方法 方法一，修改目录权限 使用compaudit命令查看被标记为不安全的文件夹 给不安全的目录添加权限1chmod 755 /home/admin/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting 方法二，跳过不安全目录的验证 在.zshrc文件的第一行添加1ZSH_DISABLE_COMPFIX=true 执行source ~/.zshrc 支持🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟 我会持续编写文章，保持每周至少一篇文章。💪 有时候编写一篇文章需要大量时间。💪 您只需一秒即可完成【点赞👍或关注❤️】。💪 您的支持将给与我更大的动力。💪 🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟🤟","link":"/p/9dad8f4e/"},{"title":"A valid provisioning profile for this executable was not found","text":"问题 使用Xcode Version 12.5 (12E262)安装App到iPhone失败，错误提示为：A valid provisioning profile for this executable was not found.。详情如下图所示： 解决 点击 File -&gt; Project Settings… 将Build System修改为 Legacy Build System（Deprecate）（遗留的构建系统(反对)） 从警告提示可以看出，Legacy Build System 将会被移除，不建议使用。暂时先这么，这个问题后面再解决！","link":"/p/3eabba2e/"},{"title":"iOS 14上UIDatePicker使用旧样式","text":"iOS一旦更新，随之而来的就是App的适配工作。其实大部分App根本不会去用iOS更新后的新特性，所以很多时候的适配都是浪费时间。所以我一再强调跨平台的重要性，注意此跨平台是指不赖原生，因此不会随着iOS更新UI发现变化。比如自绘渲染引擎的Flutter。 问题UIDatePicker在iOS 14上只显示了当天一个日期（如下图所示），且无法滚动选择其他日期。 解决在iOS13.4之后 UIDatePicker 增加了属性preferredDatePickerStyle： 123456789101112131415@available(iOS 13.4, *)public enum UIDatePickerStyle : Int { /// 这个属性会自动为当前平台和模式选择最佳样式。 case automatic = 0 /// 这个属性就是我们常用的那种滚轮的了 case wheels = 1 /// 为日期选择器使用紧凑的样式。 编辑在覆盖中进行。 case compact = 2 /// Use a style for the date picker that allows editing in place. @available(iOS 14.0, *) case inline = 3} 使用如下代码将该属性为 wheels 即可： 123if (@available(iOS 13.4, *)) { _datePicker.preferredDatePickerStyle = UIDatePickerStyleWheels;}","link":"/p/f569bd/"}],"tags":[{"name":"新冠疫苗","slug":"新冠疫苗","link":"/tags/%E6%96%B0%E5%86%A0%E7%96%AB%E8%8B%97/"},{"name":"SQL Server","slug":"SQL-Server","link":"/tags/SQL-Server/"},{"name":"in","slug":"in","link":"/tags/in/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Gitalk","slug":"Gitalk","link":"/tags/Gitalk/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"Zsh","slug":"Zsh","link":"/tags/Zsh/"},{"name":"Oh My Zsh","slug":"Oh-My-Zsh","link":"/tags/Oh-My-Zsh/"},{"name":"iOS","slug":"iOS","link":"/tags/iOS/"},{"name":"Xcode","slug":"Xcode","link":"/tags/Xcode/"}],"categories":[{"name":"Life","slug":"Life","link":"/categories/Life/"},{"name":"SQL Server","slug":"SQL-Server","link":"/categories/SQL-Server/"},{"name":"Blog","slug":"Blog","link":"/categories/Blog/"},{"name":"Hexo","slug":"Blog/Hexo","link":"/categories/Blog/Hexo/"},{"name":"Git","slug":"Git","link":"/categories/Git/"},{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"Git LFS","slug":"Git/Git-LFS","link":"/categories/Git/Git-LFS/"},{"name":"iOS","slug":"iOS","link":"/categories/iOS/"},{"name":"Xcode","slug":"iOS/Xcode","link":"/categories/iOS/Xcode/"}]}